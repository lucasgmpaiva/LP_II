/**
 * Class Room - a room in an adventure game.
 *
 * This class is part of the "World of Zuul" application. 
 * "World of Zuul" is a very simple, text based adventure game.  
 *
 * A "Room" represents one location in the scenery of the game.  It is 
 * connected to other rooms via exits.  The exits are labelled north, 
 * east, south, west.  For each direction, the room stores a reference
 * to the neighboring room, or null if there is no exit in that direction.
 * 
 * @author  Michael Kolling and David J. Barnes
 * @version 2008.03.30
 */
public class Room 
{
    private String description;
    private Room northExit;
    private Room southExit;
    private Room eastExit;
    private Room westExit;
    private Room upExit;
    private Room downExit;

    /**
     * Create a room described "description". Initially, it has
     * no exits. "description" is something like "a kitchen" or
     * "an open court yard".
     * @param description The room's description.
     */
    public Room(String description) 
    {
        this.description = description;
    }

    /**
     * Define the exits of this room.  Every direction either leads
     * to another room or is null (no exit there).
     * @param north The north exit.
     * @param east The east east.
     * @param south The south exit.
     * @param west The west exit.
     */

    Room getnorthExit(){
	return northExit;	
    }

    Room getsouthExit(){
	return southExit;	
    }

    Room geteastExit(){
	return eastExit;	
    }
   
    Room getwestExit(){
	return westExit;	
    }

    Room getupExit(){
	return upExit;	
    }

    Room getdownExit(){
	return downExit;	
    }

    public void setExits(Room north, Room south, Room east, Room west, Room up, Room down) 
    {
        if(north != null)
            northExit = north;
        if(east != null)
            eastExit = east;
        if(south != null)
            southExit = south;
        if(west != null)
            westExit = west;
	if(up != null)
            upExit = up;
	if(down != null)
	    downExit = down;
    }

    /**
     * @return The description of the room.
     */
    public String getDescription()
    {
        return description;
    }

    public void printDirections(){
	System.out.println("You are " + description());
	System.out.print("Exits: ");
        if(northExit != null) {
            System.out.print("north ");
        }
        if(eastExit != null) {
            System.out.print("east ");
        }
        if(southExit != null) {
            System.out.print("south ");
        }
        if(westExit != null) {
            System.out.print("west ");
        }
	if(downExit != null) {
            System.out.print("down ");
        }
	if(upExit != null) {
            System.out.print("up ");
        }
        System.out.println();
    }

}
